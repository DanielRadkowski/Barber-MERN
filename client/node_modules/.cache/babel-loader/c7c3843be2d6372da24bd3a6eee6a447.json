{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\nimport BookForm from './BookForm';\nimport OpeningTimes from '../Layout/Contact/OpeningTimes';\nconst Styles = styled.div`\n\n \n@media (min-width: ${breakpoints.xs}) {\n\n    .hours-table {\n        height: 100%;\n    }\n\n    .height-of-column {\n        height: 15.5em;\n    }\n}\n\n@media (min-width: ${breakpoints.lg}) {\n\n    .height-of-column {\n        left: 12.5em;\n    }\n\n    .move-table-left {\n        left: 0;\n    }\n}\n`;\nexport default function Hours(props) {\n  var displayOnSunday = \"\";\n  var displayOnWeekDay = \"\";\n  useEffect(() => {\n    if (dateFns.isSunday(selectedDate)) {\n      displayOnSunday = \"d-block\";\n      displayOnWeekDay = \"d-none\";\n    } else {\n      displayOnSunday = \"d-none\";\n      displayOnWeekDay = \"d-block\";\n    }\n  });\n\n  let Ranges = (openingHour, openingMinutes, numberOfHours) => {\n    let arr = [];\n    let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\n    let endHour = 0;\n\n    for (let i = 0; i <= numberOfHours * 2 - 1; i++) {\n      endHour = dateFns.addMinutes(startHour, 30);\n      arr.push(dateFns.format(startHour, \"H.mm\") + \" - \" + dateFns.format(endHour, \"H.mm\"));\n      startHour = endHour;\n    }\n\n    return arr;\n  };\n\n  let mongoHours = (openingHour, openingMinutes, numberOfHours) => {\n    let arr = [];\n    let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\n\n    for (let i = 0; i < numberOfHours * 2; i++) {\n      arr.push(dateFns.format(startHour, \"H-mm\"));\n      startHour = dateFns.addMinutes(startHour, 30);\n    }\n\n    return arr;\n  };\n\n  const hoursRangesForWeekDay = Ranges(9, 0, 8.5);\n  const mongoHoursArrayForWeekDay = mongoHours(9, 0, 8.5);\n  const hoursRangesForSaturday = Ranges(9, 0, 5);\n  const mongoHoursArrayForSaturday = mongoHours(9, 0, 5);\n  let hoursRanges = [];\n  let mongoHoursArray = [];\n  const selectedDate = props.state.selectedDate;\n  const clients = props.state.clients;\n  const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\n  const day = clients.filter(client => {\n    return client.date === formattedDate;\n  });\n\n  if (dateFns.isSaturday(selectedDate)) {\n    hoursRanges = hoursRangesForSaturday;\n    mongoHoursArray = mongoHoursArrayForSaturday;\n  } else {\n    hoursRanges = hoursRangesForWeekDay;\n    mongoHoursArray = mongoHoursArrayForWeekDay;\n  }\n\n  let hoursTable = () => {\n    let availabeHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          action: true,\n          variant: \"info\",\n          href: \"#\" + i.toString(),\n          onClick: handleListClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: formattedDate,\n          day: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }))\n      });\n    };\n\n    let disableHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          disabled: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, hoursRanges[i])\n      });\n    }; // var selectedSunday = () => {\n    //     console.log(\"siema\");\n    //     var openingTimes = document.getElementById(\"opening-times\");\n    //     var listGroupTabsExample = document.getElementById(\"hours-row\");\n    //     if (dateFns.isSunday(selectedDate)) {\n    //         openingTimes.classList.add(\"d-block\");\n    //         listGroupTabsExample.classList.add(\"d-none\");\n    //     } else {\n    //         openingTimes.classList.add(\"d-none\");\n    //         listGroupTabsExample.classList.add(\"d-block\");\n    //     }\n    // }\n\n\n    var hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      if (day.length > 0) {\n        if (day[0].hours[mongoHoursArray[i]].name === null) {\n          availabeHour(i);\n        } else {\n          disableHour(i);\n        }\n      } else {\n        availabeHour(i);\n      }\n    }\n\n    return hoursList;\n  };\n\n  let handleListClick = () => {\n    var listCol = document.getElementById(\"list-col\");\n    listCol.classList.add(\"move-table-left\");\n    var formHeader = document.getElementById(\"form-header\");\n    formHeader.classList.remove(\"invisible\");\n  };\n\n  console.log(displayOnSunday, displayOnWeekDay);\n  return React.createElement(Styles, {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(OpeningTimes, {\n    className: `${\"d-none\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: `justify-content-center align-items-baseline ${displayOnWeekDay}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 6,\n    id: \"list-col\",\n    className: \"mb-5 height-of-column positon-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Choose hour:\"), React.createElement(ListGroup, {\n    className: \"hours-table overflow-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    lg: 6,\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    id: \"form-header\",\n    className: \"mb-3 invisible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Leave contact:\"), React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","useEffect","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","BookForm","OpeningTimes","Styles","div","xs","lg","Hours","props","displayOnSunday","displayOnWeekDay","isSunday","selectedDate","Ranges","openingHour","openingMinutes","numberOfHours","arr","startHour","setMinutes","setHours","Date","endHour","i","addMinutes","push","format","mongoHours","hoursRangesForWeekDay","mongoHoursArrayForWeekDay","hoursRangesForSaturday","mongoHoursArrayForSaturday","hoursRanges","mongoHoursArray","state","clients","formattedDate","day","filter","client","date","isSaturday","hoursTable","availabeHour","hoursList","hour","toString","handleListClick","form","disableHour","length","hours","name","listCol","document","getElementById","classList","add","formHeader","remove","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport BookForm from './BookForm';\r\nimport OpeningTimes from '../Layout/Contact/OpeningTimes';\r\n\r\nconst Styles = styled.div`\r\n\r\n \r\n@media (min-width: ${breakpoints.xs}) {\r\n\r\n    .hours-table {\r\n        height: 100%;\r\n    }\r\n\r\n    .height-of-column {\r\n        height: 15.5em;\r\n    }\r\n}\r\n\r\n@media (min-width: ${breakpoints.lg}) {\r\n\r\n    .height-of-column {\r\n        left: 12.5em;\r\n    }\r\n\r\n    .move-table-left {\r\n        left: 0;\r\n    }\r\n}\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    var displayOnSunday = \"\";\r\n    var displayOnWeekDay = \"\";\r\n    useEffect(() => {\r\n        \r\n        if (dateFns.isSunday(selectedDate)) {\r\n            displayOnSunday = \"d-block\";\r\n            displayOnWeekDay = \"d-none\";\r\n        } else {\r\n            displayOnSunday = \"d-none\";\r\n            displayOnWeekDay = \"d-block\";\r\n        }\r\n        \r\n    });\r\n\r\n    let Ranges = (openingHour, openingMinutes, numberOfHours) => {\r\n        let arr = [];\r\n        let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\r\n        let endHour = 0;\r\n        for (let i = 0; i <= (numberOfHours * 2) - 1; i++) {\r\n            endHour = dateFns.addMinutes(startHour, 30);\r\n            arr.push(dateFns.format(startHour, \"H.mm\") + \" - \" + dateFns.format(endHour, \"H.mm\"));\r\n            startHour = endHour;\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    let mongoHours = (openingHour, openingMinutes, numberOfHours) => {\r\n        let arr = [];\r\n        let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\r\n        for (let i = 0; i < (numberOfHours * 2); i++) {\r\n            arr.push(dateFns.format(startHour, \"H-mm\"));\r\n            startHour = dateFns.addMinutes(startHour, 30);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    const hoursRangesForWeekDay = Ranges(9, 0, 8.5);\r\n    const mongoHoursArrayForWeekDay = mongoHours(9, 0, 8.5);\r\n    const hoursRangesForSaturday = Ranges(9, 0, 5);\r\n    const mongoHoursArrayForSaturday = mongoHours(9, 0, 5);\r\n    let hoursRanges = [];\r\n    let mongoHoursArray = [];\r\n\r\n    const selectedDate = props.state.selectedDate;\r\n    const clients = props.state.clients;\r\n    const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\r\n    const day = clients.filter(client => {\r\n        return client.date === formattedDate;\r\n    });\r\n\r\n    if (dateFns.isSaturday(selectedDate)) {\r\n        hoursRanges = hoursRangesForSaturday;\r\n        mongoHoursArray = mongoHoursArrayForSaturday;\r\n    } else {\r\n        hoursRanges = hoursRangesForWeekDay;\r\n        mongoHoursArray = mongoHoursArrayForWeekDay;\r\n    }\r\n\r\n    let hoursTable = () => {\r\n\r\n        let availabeHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        action\r\n                        variant=\"info\"\r\n                        href={\"#\" + i.toString()}\r\n                        onClick={handleListClick}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                ),\r\n\r\n                form: (\r\n                    <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                        <BookForm\r\n                            id={i}\r\n                            date={formattedDate}\r\n                            day={day}\r\n                        />\r\n                    </Tab.Pane>\r\n                )\r\n            });\r\n        }\r\n\r\n        let disableHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        disabled\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                )\r\n            });\r\n        }\r\n\r\n        // var selectedSunday = () => {\r\n        //     console.log(\"siema\");\r\n        //     var openingTimes = document.getElementById(\"opening-times\");\r\n        //     var listGroupTabsExample = document.getElementById(\"hours-row\");\r\n        //     if (dateFns.isSunday(selectedDate)) {\r\n        //         openingTimes.classList.add(\"d-block\");\r\n        //         listGroupTabsExample.classList.add(\"d-none\");\r\n        //     } else {\r\n        //         openingTimes.classList.add(\"d-none\");\r\n        //         listGroupTabsExample.classList.add(\"d-block\");\r\n        //     }\r\n        // }\r\n\r\n        var hoursList = [];\r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n            if (day.length > 0) {\r\n                if (day[0].hours[mongoHoursArray[i]].name === null) {\r\n                    availabeHour(i);\r\n                } else {\r\n                    disableHour(i);\r\n                }\r\n            } else {\r\n                availabeHour(i);\r\n            }\r\n        }\r\n        return hoursList;\r\n\r\n    }\r\n\r\n    let handleListClick = () => {\r\n        var listCol = document.getElementById(\"list-col\");\r\n        listCol.classList.add(\"move-table-left\");\r\n        var formHeader = document.getElementById(\"form-header\");\r\n        formHeader.classList.remove(\"invisible\");\r\n    }\r\n    console.log(displayOnSunday, displayOnWeekDay);\r\n\r\n    return (\r\n        <Styles className=\"mt-3\">\r\n            <OpeningTimes className={`${\"d-none\"}`} />\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row className={`justify-content-center align-items-baseline ${displayOnWeekDay}`}>\r\n                    <Col lg={6} id=\"list-col\" className=\"mb-5 height-of-column positon-relative\">\r\n                        <h4 className=\"\">Choose hour:</h4>\r\n                        <ListGroup className=\"hours-table overflow-auto\">\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col lg={6} className=\"mt-3\">\r\n                        <h4 id=\"form-header\" className=\"mb-3 invisible\">Leave contact:</h4>\r\n                        <Tab.Content>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}