{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\src\\\\components\\\\Calendar.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport dateFns from \"date-fns\";\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Container, Row, Col } from 'react-bootstrap';\nconst Styles = styled.div`\n\n`;\nexport default function Calendar() {\n  const state = {\n    currentMonth: new Date(),\n    selectedDate: new Date()\n  };\n\n  let renderHeader = () => {\n    const dateFormat = \"MMMM YYYY\";\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"1 of 3\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"2 of 3\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"3 of 3\")));\n  };\n\n  let renderDays = () => {};\n\n  let renderCells = () => {};\n\n  let onDateClick = day => {};\n\n  let nextMonth = () => {};\n\n  let prevMonth = () => {};\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, renderHeader(), renderDays(), renderCells());\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/src/components/Calendar.jsx"],"names":["React","useState","styled","dateFns","breakpoints","Container","Row","Col","Styles","div","Calendar","state","currentMonth","Date","selectedDate","renderHeader","dateFormat","renderDays","renderCells","onDateClick","day","nextMonth","prevMonth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AAGA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;CAA1B;AAIA,eAAe,SAASC,QAAT,GAAoB;AAE/B,QAAMC,KAAK,GAAG;AACVC,IAAAA,YAAY,EAAE,IAAIC,IAAJ,EADJ;AAEVC,IAAAA,YAAY,EAAE,IAAID,IAAJ;AAFJ,GAAd;;AAKD,MAAIE,YAAY,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAG,WAAnB;AAEA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ;AASH,GAZF;;AAcC,MAAIC,UAAU,GAAG,MAAM,CAAG,CAA1B;;AAEA,MAAIC,WAAW,GAAG,MAAM,CAAG,CAA3B;;AAEA,MAAIC,WAAW,GAAGC,GAAG,IAAI,CAAG,CAA5B;;AAEA,MAAIC,SAAS,GAAG,MAAM,CAAG,CAAzB;;AAEA,MAAIC,SAAS,GAAG,MAAM,CAAG,CAAzB;;AAGA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,YAAY,EADjB,EAEKE,UAAU,EAFf,EAGKC,WAAW,EAHhB,CADJ;AAOH","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport dateFns from \"date-fns\";\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function Calendar() {\r\n\r\n    const state = {\r\n        currentMonth: new Date(),\r\n        selectedDate: new Date()\r\n    };\r\n\r\n   let renderHeader = () => {\r\n        const dateFormat = \"MMMM YYYY\";\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>1 of 3</Col>\r\n                    <Col>2 of 3</Col>\r\n                    <Col>3 of 3</Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    let renderDays = () => { }\r\n\r\n    let renderCells = () => { }\r\n\r\n    let onDateClick = day => { }\r\n\r\n    let nextMonth = () => { }\r\n\r\n    let prevMonth = () => { }\r\n\r\n\r\n    return (\r\n        <Styles>\r\n            {renderHeader()}\r\n            {renderDays()}\r\n            {renderCells()}\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}