{"ast":null,"code":"import _slicedToArray from\"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import React,{useState,useEffect}from'react';import{Jumbotron}from'react-bootstrap';import axios from'axios';import*as dateFns from'date-fns';import Hours from'./Hours';import CalendarHeader from'./CalendarHeader';import CalendarWeekDays from'./CalendarWeekDays';import CalendarCells from'./CalendarCells';import moustache from'../../pictures/moustache-calendar.png';import Thanks from'./Thanks';var Styles=_styled.div.withConfig({displayName:\"Calendar__Styles\",componentId:\"sc-1dxgf3e-0\"})([\"\"]);export default function Calendar(){var _useState=useState({currentMonth:new Date(),selectedDate:new Date(),currentDate:new Date(),clients:[],done:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){axios.get('https://barber-andrew.herokuapp.com/barber/').then(function(response){setState({currentMonth:state.currentMonth,selectedDate:state.selectedDate,currentDate:state.currentDate,clients:response.data});}).catch(function(error){console.log(error);});},[]);var nextMonth=function nextMonth(){setState({currentMonth:dateFns.addMonths(state.currentMonth,1),selectedDate:state.selectedDate,currentDate:state.currentDate,clients:state.clients});};var prevMonth=function prevMonth(){if(dateFns.differenceInCalendarMonths(state.currentDate,state.currentMonth)<0){setState({currentMonth:dateFns.subMonths(state.currentMonth,1),selectedDate:state.selectedDate,currentDate:state.currentDate,clients:state.clients});}};var onDateClick=function onDateClick(day){if(dateFns.isSameDay(day,state.currentDate)|dateFns.isAfter(day,state.currentDate)){setState({currentMonth:state.currentMonth,selectedDate:day,currentDate:state.currentDate,clients:state.clients});}};var thanksScreen=function thanksScreen(){setState({currentMonth:state.currentMonth,selectedDate:state.selectedDate,currentDate:state.currentDate,clients:state.clients,done:true});};return React.createElement(Styles,null,React.createElement(Jumbotron,{className:\"\".concat(state.done?\"d-none\":\"\",\" pt-2 pt-md-4 pb-3 bg-white rounded text-center\")},React.createElement(\"img\",{src:moustache,alt:\"moustache\",className:\"mw-100 pb-0 pb-md-4\"}),React.createElement(CalendarHeader,{prevMonth:prevMonth,nextMonth:nextMonth,actualMonth:state.currentMonth}),React.createElement(CalendarWeekDays,{actualMonth:state.currentMonth}),React.createElement(CalendarCells,{state:state,onDateClick:onDateClick})),React.createElement(Hours,{state:state,done:thanksScreen}),React.createElement(Thanks,{ready:state.done,className:\"\".concat(state.done?\"d-flex\":\"d-none\",\" \")}));}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Calendar.jsx"],"names":["React","useState","useEffect","Jumbotron","axios","dateFns","Hours","CalendarHeader","CalendarWeekDays","CalendarCells","moustache","Thanks","Styles","styled","div","Calendar","currentMonth","Date","selectedDate","currentDate","clients","done","state","setState","get","then","response","data","catch","error","console","log","nextMonth","addMonths","prevMonth","differenceInCalendarMonths","subMonths","onDateClick","day","isSameDay","isAfter","thanksScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components/macro';\r\nimport * as dateFns from 'date-fns';\r\nimport Hours from './Hours';\r\nimport CalendarHeader from './CalendarHeader';\r\nimport CalendarWeekDays from './CalendarWeekDays';\r\nimport CalendarCells from './CalendarCells';\r\nimport moustache from '../../pictures/moustache-calendar.png';\r\nimport Thanks from './Thanks';\r\n\r\nconst Styles = styled.div`\r\n\r\n\r\n`\r\n\r\nexport default function Calendar() {\r\n\r\n    const [state, setState] = useState({\r\n        currentMonth: new Date(),\r\n        selectedDate: new Date(),\r\n        currentDate: new Date(),\r\n        clients: [],\r\n        done: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get('https://barber-andrew.herokuapp.com/barber/')\r\n            .then(response => {\r\n                setState({\r\n                    currentMonth: state.currentMonth,\r\n                    selectedDate: state.selectedDate,\r\n                    currentDate: state.currentDate,\r\n                    clients: response.data\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n\r\n    let nextMonth = () => {\r\n        setState({\r\n            currentMonth: dateFns.addMonths(state.currentMonth, 1),\r\n            selectedDate: state.selectedDate,\r\n            currentDate: state.currentDate,\r\n            clients: state.clients\r\n        });\r\n    }\r\n\r\n    let prevMonth = () => {\r\n        if (dateFns.differenceInCalendarMonths(state.currentDate, state.currentMonth) < 0) {\r\n            setState({\r\n                currentMonth: dateFns.subMonths(state.currentMonth, 1),\r\n                selectedDate: state.selectedDate,\r\n                currentDate: state.currentDate,\r\n                clients: state.clients\r\n            });\r\n        }\r\n    }\r\n\r\n    let onDateClick = day => {\r\n\r\n\r\n        if (dateFns.isSameDay(day, state.currentDate) | dateFns.isAfter(day, state.currentDate)) {\r\n            setState({\r\n                currentMonth: state.currentMonth,\r\n                selectedDate: day,\r\n                currentDate: state.currentDate,\r\n                clients: state.clients\r\n            });            \r\n        }\r\n    }\r\n\r\n    let thanksScreen = () => {\r\n        setState({\r\n            currentMonth: state.currentMonth,\r\n            selectedDate: state.selectedDate,\r\n            currentDate: state.currentDate,\r\n            clients: state.clients,\r\n            done: true\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Jumbotron className={`${state.done ? \"d-none\" : \"\"} pt-2 pt-md-4 pb-3 bg-white rounded text-center`}>\r\n                <img src={moustache} alt=\"moustache\" className=\"mw-100 pb-0 pb-md-4\"></img>\r\n                <CalendarHeader\r\n                    prevMonth={prevMonth}\r\n                    nextMonth={nextMonth}\r\n                    actualMonth={state.currentMonth}\r\n                />\r\n                <CalendarWeekDays\r\n                    actualMonth={state.currentMonth}\r\n                />\r\n                <CalendarCells\r\n                    state={state}\r\n                    onDateClick={onDateClick}\r\n                />\r\n            </Jumbotron>\r\n            <Hours\r\n                state={state}\r\n                done={thanksScreen}\r\n            />\r\n            <Thanks ready={state.done} className={`${state.done ? \"d-flex\" : \"d-none\"} `} />\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}