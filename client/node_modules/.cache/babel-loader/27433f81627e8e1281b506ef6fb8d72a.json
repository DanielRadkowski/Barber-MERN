{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\nimport BookForm from './BookForm';\nconst Styles = styled.div`\n\n`;\nexport default function Hours(props) {\n  const hoursArray = [\"9-00\", \"9-30\", \"10-00\", \"10-30\", \"11-00\", \"11-30\", \"12-00\", \"12-30\", \"13-00\", \"13-30\", \"14-00\", \"14-30\", \"15-00\", \"15-30\", \"16-00\", \"16-30\", \"17-00\"];\n  const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\", \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\", \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"]; // let hoursRanges = () => {\n  //     let arr = [];\n  //     for (let i = 9; i < 18; i++) {\n  //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \n  //     }\n  // }\n  //hoursSchemaProps();\n\n  const day = props.clients.filter(client => {\n    return client.date === props.date;\n  });\n  console.log(day);\n  console.log(day[0].hours);\n\n  let hoursTable = () => {\n    let hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      // if (day.hours[hoursArray[i]] === null) {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          action: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: props.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }))\n      }); // } else {\n      //     hoursList.push({\n      //         hour: (\n      //             <ListGroup.Item\n      //                 id={i}\n      //                 disabled\n      //                 href={\"#\" + i.toString()}\n      //             >\n      //                 {hoursRanges[i]}\n      //             </ListGroup.Item>\n      //         )\n      //     });\n      // }\n    }\n\n    return hoursList;\n  };\n\n  return React.createElement(Styles, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","Form","BookForm","Styles","div","Hours","props","hoursArray","hoursRanges","day","clients","filter","client","date","console","log","hours","hoursTable","hoursList","i","length","push","hour","toString","form","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,SAAxB,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,MAAMC,MAAM,GAAGT,MAAM,CAACU,GAAI;;CAA1B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,EACf,OADe,EACN,OADM,EACG,OADH,EACY,OADZ,EACqB,OADrB,EAC8B,OAD9B,EAEf,OAFe,EAEN,OAFM,EAEG,OAFH,EAEY,OAFZ,EAEqB,OAFrB,EAE8B,OAF9B,CAAnB;AAIA,QAAMC,WAAW,GAAG,CAAC,aAAD,EAAgB,cAAhB,EAAgC,eAAhC,EAAiD,eAAjD,EAAkE,eAAlE,EAChB,eADgB,EACC,eADD,EACkB,eADlB,EACmC,eADnC,EACoD,eADpD,EACqE,eADrE,EAEhB,eAFgB,EAEC,eAFD,EAEkB,eAFlB,EAEmC,eAFnC,EAEoD,eAFpD,EAEqE,eAFrE,CAApB,CANiC,CAUjC;AACA;AACA;AACA;AACA;AACA;AAEC;;AAEA,QAAMC,GAAG,GAAGH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAI;AACxC,WAAOA,MAAM,CAACC,IAAP,KAAgBP,KAAK,CAACO,IAA7B;AACH,GAFY,CAAZ;AAKDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAAC,CAAD,CAAH,CAAOO,KAAnB;;AAIA,MAAIC,UAAU,GAAG,MAAM;AACnB,QAAIC,SAAS,GAAG,EAAhB;;AAGA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,WAAW,CAACY,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC1C;AACKD,MAAAA,SAAS,CAACG,IAAV,CAAe;AACXC,QAAAA,IAAI,EACA,oBAAC,SAAD,CAAW,IAAX;AACI,UAAA,EAAE,EAAEH,CADR;AAEI,UAAA,MAAM,MAFV;AAGI,UAAA,IAAI,EAAE,MAAMA,CAAC,CAACI,QAAF,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKf,WAAW,CAACW,CAAD,CALhB,CAFO;AAWXK,QAAAA,IAAI,EACA,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,QAAQ,EAAE,MAAML,CAAC,CAACI,QAAF,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AACI,UAAA,EAAE,EAAEJ,CADR;AAEI,UAAA,IAAI,EAAEb,KAAK,CAACO,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAZO,OAAf,EAFqC,CAsBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AACD,WAAOK,SAAP;AACH,GA1CD;;AA4CA,SACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD,CAAK,SAAL;AAAe,IAAA,EAAE,EAAC,yBAAlB;AAA4C,IAAA,gBAAgB,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,GAAGQ,GAAb,CAAiBC,IAAI,IAAI;AAAE,WAAOA,IAAI,CAACJ,IAAZ;AAAkB,GAA7C,CADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD,CAAK,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,UAAU,GAAGQ,GAAb,CAAiBC,IAAI,IAAI;AAAE,WAAOA,IAAI,CAACF,IAAZ;AAAkB,GAA7C,CADL,CADJ,CANJ,CADJ,CADJ,CADJ;AAkBH","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\r\nimport BookForm from './BookForm'\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    const hoursArray = [\"9-00\", \"9-30\", \"10-00\", \"10-30\", \"11-00\",\r\n        \"11-30\", \"12-00\", \"12-30\", \"13-00\", \"13-30\", \"14-00\",\r\n        \"14-30\", \"15-00\", \"15-30\", \"16-00\", \"16-30\", \"17-00\"];\r\n\r\n    const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\",\r\n        \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\",\r\n        \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"];\r\n\r\n    // let hoursRanges = () => {\r\n    //     let arr = [];\r\n    //     for (let i = 9; i < 18; i++) {\r\n    //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \r\n    //     }\r\n    // }\r\n\r\n     //hoursSchemaProps();\r\n\r\n     const day = props.clients.filter(client => {\r\n        return client.date === props.date;\r\n    });\r\n\r\n    \r\n    console.log(day);\r\n    console.log(day[0].hours);\r\n\r\n\r\n\r\n    let hoursTable = () => {\r\n        let hoursList = [];\r\n\r\n        \r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n           // if (day.hours[hoursArray[i]] === null) {\r\n                hoursList.push({\r\n                    hour: (\r\n                        <ListGroup.Item\r\n                            id={i}\r\n                            action\r\n                            href={\"#\" + i.toString()}\r\n                        >\r\n                            {hoursRanges[i]}\r\n                        </ListGroup.Item>\r\n                    ),\r\n    \r\n                    form: (\r\n                        <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                            <BookForm\r\n                                id={i}\r\n                                date={props.date}\r\n                            />\r\n                        </Tab.Pane>\r\n                    )\r\n                });\r\n            // } else {\r\n            //     hoursList.push({\r\n            //         hour: (\r\n            //             <ListGroup.Item\r\n            //                 id={i}\r\n            //                 disabled\r\n            //                 href={\"#\" + i.toString()}\r\n            //             >\r\n            //                 {hoursRanges[i]}\r\n            //             </ListGroup.Item>\r\n            //         )\r\n            //     });\r\n            // }\r\n            \r\n        }\r\n        return hoursList;\r\n    }\r\n\r\n    return (\r\n        <Styles className=\"\" >\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <ListGroup>\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>  \r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}