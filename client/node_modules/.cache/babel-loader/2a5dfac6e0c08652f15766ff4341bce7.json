{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\nimport BookForm from './BookForm';\nimport mongoHoursArray from './mongoHoursArray';\nconst Styles = styled.div`\n\n`;\nexport default function Hours(props) {\n  const selectedDate = props.state.selectedDate;\n  const clients = props.state.clients;\n  const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\", \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\", \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"]; // let hoursRanges = () => {\n  //     let arr = [];\n  //     for (let i = 9; i < 18; i++) {\n  //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \n  //     }\n  // }\n  //hoursSchemaProps();\n\n  let Ranges = (openingHour, closingHour) => {\n    let arr = [];\n    let startHourF = 0;\n    let endHourF = 0;\n\n    for (let i = openingHour; i <= closingHour; i++) {\n      let startHour = openingHour; //startHourF = startHour.toFixed(2);\n\n      let endHour = startHour + 0.3; //endHourF = endHour.toFixed(2);\n\n      arr.push(startHour.toFixed(2) + \"-\" + endHour.toFixed(2));\n    }\n\n    return arr;\n  };\n\n  console.log(Ranges(9, 17));\n  const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\n  const day = clients.filter(client => {\n    return client.date === formattedDate;\n  });\n\n  let hoursTable = () => {\n    let availabeHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          action: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: formattedDate,\n          day: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }))\n      });\n    };\n\n    let disableHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          disabled: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, hoursRanges[i])\n      });\n    };\n\n    let hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      if (day.length > 0) {\n        if (day[0].hours[mongoHoursArray[i]].name === null) {\n          availabeHour(i);\n        } else {\n          disableHour(i);\n        }\n      } else {\n        availabeHour(i);\n      }\n    }\n\n    return hoursList;\n  };\n\n  return React.createElement(Styles, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","BookForm","mongoHoursArray","Styles","div","Hours","props","selectedDate","state","clients","hoursRanges","Ranges","openingHour","closingHour","arr","startHourF","endHourF","i","startHour","endHour","push","toFixed","console","log","formattedDate","format","day","filter","client","date","hoursTable","availabeHour","hoursList","hour","toString","form","disableHour","length","hours","name","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,SAAxB,QAAyC,iBAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,MAAM,GAAGT,MAAM,CAACU,GAAI;;CAA1B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYD,YAAjC;AACA,QAAME,OAAO,GAAGH,KAAK,CAACE,KAAN,CAAYC,OAA5B;AAEA,QAAMC,WAAW,GAAG,CAAC,aAAD,EAAgB,cAAhB,EAAgC,eAAhC,EAAiD,eAAjD,EAAkE,eAAlE,EAChB,eADgB,EACC,eADD,EACkB,eADlB,EACmC,eADnC,EACoD,eADpD,EACqE,eADrE,EAEhB,eAFgB,EAEC,eAFD,EAEkB,eAFlB,EAEmC,eAFnC,EAEoD,eAFpD,EAEqE,eAFrE,CAApB,CALiC,CASjC;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAIC,MAAM,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;AACvC,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAGL,WAAb,EAA0BK,CAAC,IAAIJ,WAA/B,EAA4CI,CAAC,EAA7C,EAAiD;AAC7C,UAAIC,SAAS,GAAGN,WAAhB,CAD6C,CAE7C;;AACA,UAAIO,OAAO,GAAID,SAAS,GAAG,GAA3B,CAH6C,CAI7C;;AACAJ,MAAAA,GAAG,CAACM,IAAJ,CAASF,SAAS,CAACG,OAAV,CAAkB,CAAlB,IAAuB,GAAvB,GAA6BF,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAtC;AACH;;AACD,WAAOP,GAAP;AACH,GAZD;;AAcAQ,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAAC,CAAD,EAAG,EAAH,CAAlB;AAEI,QAAMa,aAAa,GAAG7B,OAAO,CAAC8B,MAAR,CAAelB,YAAf,EAA6B,SAA7B,CAAtB;AAEA,QAAMmB,GAAG,GAAGjB,OAAO,CAACkB,MAAR,CAAeC,MAAM,IAAI;AACjC,WAAOA,MAAM,CAACC,IAAP,KAAgBL,aAAvB;AACH,GAFW,CAAZ;;AAIJ,MAAIM,UAAU,GAAG,MAAM;AAEnB,QAAIC,YAAY,GAAGd,CAAC,IAAI;AACpBe,MAAAA,SAAS,CAACZ,IAAV,CAAe;AACXa,QAAAA,IAAI,EACA,oBAAC,SAAD,CAAW,IAAX;AACI,UAAA,EAAE,EAAEhB,CADR;AAEI,UAAA,MAAM,MAFV;AAGI,UAAA,IAAI,EAAE,MAAMA,CAAC,CAACiB,QAAF,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKxB,WAAW,CAACO,CAAD,CALhB,CAFO;AAWXkB,QAAAA,IAAI,EACA,oBAAC,GAAD,CAAK,IAAL;AAAU,UAAA,QAAQ,EAAE,MAAMlB,CAAC,CAACiB,QAAF,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AACI,UAAA,EAAE,EAAEjB,CADR;AAEI,UAAA,IAAI,EAAEO,aAFV;AAGI,UAAA,GAAG,EAAEE,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAZO,OAAf;AAqBH,KAtBD;;AAwBA,QAAIU,WAAW,GAAGnB,CAAC,IAAI;AACnBe,MAAAA,SAAS,CAACZ,IAAV,CAAe;AACXa,QAAAA,IAAI,EACA,oBAAC,SAAD,CAAW,IAAX;AACI,UAAA,EAAE,EAAEhB,CADR;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,IAAI,EAAE,MAAMA,CAAC,CAACiB,QAAF,EAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKxB,WAAW,CAACO,CAAD,CALhB;AAFO,OAAf;AAWH,KAZD;;AAcA,QAAIe,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,WAAW,CAAC2B,MAAhC,EAAwCpB,CAAC,EAAzC,EAA6C;AACzC,UAAIS,GAAG,CAACW,MAAJ,GAAa,CAAjB,EAAoB;AAChB,YAAIX,GAAG,CAAC,CAAD,CAAH,CAAOY,KAAP,CAAapC,eAAe,CAACe,CAAD,CAA5B,EAAiCsB,IAAjC,KAA0C,IAA9C,EAAoD;AAChDR,UAAAA,YAAY,CAACd,CAAD,CAAZ;AACH,SAFD,MAEO;AACHmB,UAAAA,WAAW,CAACnB,CAAD,CAAX;AACH;AACJ,OAND,MAMO;AACHc,QAAAA,YAAY,CAACd,CAAD,CAAZ;AACH;AACJ;;AACD,WAAOe,SAAP;AACH,GArDD;;AAuDA,SACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD,CAAK,SAAL;AAAe,IAAA,EAAE,EAAC,yBAAlB;AAA4C,IAAA,gBAAgB,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,UAAU,GAAGU,GAAb,CAAiBC,IAAI,IAAI;AAAE,WAAOA,IAAI,CAACR,IAAZ;AAAkB,GAA7C,CADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD,CAAK,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,UAAU,GAAGU,GAAb,CAAiBC,IAAI,IAAI;AAAE,WAAOA,IAAI,CAACN,IAAZ;AAAkB,GAA7C,CADL,CADJ,CANJ,CADJ,CADJ,CADJ;AAkBH","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport BookForm from './BookForm';\r\nimport mongoHoursArray from './mongoHoursArray';\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    const selectedDate = props.state.selectedDate;\r\n    const clients = props.state.clients;\r\n\r\n    const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\",\r\n        \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\",\r\n        \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"];\r\n\r\n    // let hoursRanges = () => {\r\n    //     let arr = [];\r\n    //     for (let i = 9; i < 18; i++) {\r\n    //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \r\n    //     }\r\n    // }\r\n\r\n    //hoursSchemaProps();\r\n\r\n    let Ranges = (openingHour, closingHour) => {\r\n        let arr = [];\r\n        let startHourF = 0;\r\n        let endHourF = 0;\r\n        for (let i = openingHour; i <= closingHour; i++) {\r\n            let startHour = openingHour;\r\n            //startHourF = startHour.toFixed(2);\r\n            let endHour = (startHour + 0.3);\r\n            //endHourF = endHour.toFixed(2);\r\n            arr.push(startHour.toFixed(2) + \"-\" + endHour.toFixed(2));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    console.log(Ranges(9,17));\r\n\r\n        const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\r\n\r\n        const day = clients.filter(client => {\r\n            return client.date === formattedDate;\r\n        });\r\n\r\n    let hoursTable = () => {\r\n\r\n        let availabeHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        action\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                ),\r\n\r\n                form: (\r\n                    <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                        <BookForm\r\n                            id={i}\r\n                            date={formattedDate}\r\n                            day={day}\r\n                        />\r\n                    </Tab.Pane>\r\n                )\r\n            });\r\n        }\r\n\r\n        let disableHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        disabled\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                )\r\n            });\r\n        }\r\n\r\n        let hoursList = [];\r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n            if (day.length > 0) {\r\n                if (day[0].hours[mongoHoursArray[i]].name === null) {\r\n                    availabeHour(i);\r\n                } else {\r\n                    disableHour(i);\r\n                }\r\n            } else {\r\n                availabeHour(i);\r\n            }\r\n        }\r\n        return hoursList;\r\n    }\r\n\r\n    return (\r\n        <Styles className=\"\" >\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <ListGroup>\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}