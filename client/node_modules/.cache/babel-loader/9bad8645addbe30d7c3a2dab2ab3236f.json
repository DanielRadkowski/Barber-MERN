{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\src\\\\components\\\\BookButton.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nconst Styles = styled.div`\n\n.btn-lg {\n    font-size: 3vw;\n    background: none;\n  }\n\n:root {\n    --button-height: 60px;\n  }\n\n  .Button {\n    background: 4px solid white;\n    border: none;\n    display: inline-block;\n    height: var(--button-height);\n    overflow: hidden;\n    padding: 0 40px;\n    position: relative;\n  }\n  \n  .Button,\n  svg {\n    cursor: pointer;\n    //font-size: 24px;\n    text-transform: uppercase;\n  }\n  \n\n  @media(max-width: ${breakpoints.md}) {\n\n    .btn-lg {\n      font-size: 5vw;\n    }\n  }\n`;\n\nfunction BookButton() {\n  const btn = document.querySelector('.js-button');\n  const btnText = btn.textContent;\n  const width = btn.clientWidth;\n  const height = btn.clientHeight;\n  const svg = Snap(width, height);\n  const color1 = '#FFFFFF';\n  const gradient = 'L(0, 0, 300, 300)#0575E6-#021B79';\n  const maskOffset = btn.clientHeight;\n  const border = svg.rect(0, 0, width, height).attr({\n    'fill': 'none',\n    'stroke': color1,\n    'stroke-width': 4,\n    'class': 'border'\n  });\n  const mask = svg.path(`M0,0 L${width + maskOffset},0 L${width},${height} L-${maskOffset}, ${height} Z`).attr({\n    'fill': 'white',\n    'stroke': 'white',\n    'class': 'mask',\n    'stroke-width': 0\n  }).transform(`t-${width + maskOffset},0`);\n  const maskInvert = mask.clone().transform('t0,0');\n  const text = svg.text(width / 2, height / 2, btnText).attr({\n    'text-anchor': 'middle',\n    'dominant-baseline': 'central',\n    'fill': color1\n  });\n  const button = svg.group(text, border).attr({\n    mask: maskInvert\n  });\n  const textMasked = text.clone().attr({\n    'fill': gradient\n  });\n  const borderMasked = border.clone().attr({\n    'stroke': gradient\n  });\n  const masked = svg.group(textMasked, borderMasked).attr({\n    mask\n  });\n  svg.hover(() => {\n    mask.attr('stroke-width', 4);\n    mask.stop().animate({\n      transform: 't0,0'\n    }, 500, mina.easein);\n    maskInvert.stop().animate({\n      transform: `t${width + maskOffset},0`\n    }, 500, mina.easein);\n  }, () => {\n    mask.stop().animate({\n      transform: `t-${width + maskOffset},0`\n    }, 350, mina.easeout, () => mask.attr('stroke-width', 0));\n    maskInvert.stop().animate({\n      transform: 't0,0'\n    }, 350, mina.easeout);\n  });\n  svg.click(() => btn.click());\n  btn.replaceWith(svg.node);\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  });\n}\n\nexport default BookButton;","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/src/components/BookButton.jsx"],"names":["React","styled","Button","breakpoints","Styles","div","md","BookButton","btn","document","querySelector","btnText","textContent","width","clientWidth","height","clientHeight","svg","Snap","color1","gradient","maskOffset","border","rect","attr","mask","path","transform","maskInvert","clone","text","button","group","textMasked","borderMasked","masked","hover","stop","animate","mina","easein","easeout","click","replaceWith","node"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'react-bootstrap';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\n\r\nconst Styles = styled.div`\r\n\r\n.btn-lg {\r\n    font-size: 3vw;\r\n    background: none;\r\n  }\r\n\r\n:root {\r\n    --button-height: 60px;\r\n  }\r\n\r\n  .Button {\r\n    background: 4px solid white;\r\n    border: none;\r\n    display: inline-block;\r\n    height: var(--button-height);\r\n    overflow: hidden;\r\n    padding: 0 40px;\r\n    position: relative;\r\n  }\r\n  \r\n  .Button,\r\n  svg {\r\n    cursor: pointer;\r\n    //font-size: 24px;\r\n    text-transform: uppercase;\r\n  }\r\n  \r\n\r\n  @media(max-width: ${breakpoints.md}) {\r\n\r\n    .btn-lg {\r\n      font-size: 5vw;\r\n    }\r\n  }\r\n`\r\n\r\nfunction BookButton() {\r\n\r\n    const btn = document.querySelector('.js-button')\r\n    const btnText = btn.textContent\r\n    const width = btn.clientWidth\r\n    const height = btn.clientHeight\r\n    const svg = Snap(width, height)\r\n    const color1 = '#FFFFFF'\r\n    const gradient = 'L(0, 0, 300, 300)#0575E6-#021B79'\r\n    const maskOffset = btn.clientHeight\r\n    \r\n    const border = svg\r\n      .rect(0, 0, width, height)\r\n      .attr({ 'fill': 'none', 'stroke': color1, 'stroke-width': 4, 'class': 'border' })\r\n    \r\n    const mask = svg\r\n      .path(`M0,0 L${width + maskOffset},0 L${width},${height} L-${maskOffset}, ${height} Z`)\r\n      .attr({ 'fill': 'white', 'stroke': 'white', 'class': 'mask', 'stroke-width': 0 })\r\n      .transform(`t-${width + maskOffset},0`)\r\n    \r\n    const maskInvert = mask\r\n      .clone()\r\n      .transform('t0,0')\r\n    \r\n    const text = svg\r\n      .text(width / 2, height / 2, btnText)\r\n      .attr({ 'text-anchor': 'middle', 'dominant-baseline': 'central', 'fill': color1 })\r\n    \r\n    const button = svg\r\n      .group(text, border)\r\n      .attr({ mask: maskInvert })\r\n    \r\n    const textMasked = text\r\n      .clone()\r\n      .attr({ 'fill': gradient })\r\n    \r\n    const borderMasked = border\r\n      .clone()\r\n      .attr({ 'stroke': gradient })\r\n    \r\n    const masked = svg\r\n      .group(textMasked, borderMasked)\r\n      .attr({ mask })\r\n    \r\n    svg.hover(\r\n      () => {\r\n        mask.attr('stroke-width', 4)\r\n        mask.stop().animate({ transform: 't0,0' }, 500, mina.easein )\r\n        maskInvert.stop().animate({ transform: `t${width + maskOffset},0` }, 500, mina.easein )\r\n      },\r\n      () => {\r\n        mask.stop().animate({ transform: `t-${width + maskOffset},0` }, 350, mina.easeout, () => mask.attr('stroke-width', 0))\r\n        maskInvert.stop().animate({ transform: 't0,0' }, 350, mina.easeout)\r\n      }\r\n    )\r\n    \r\n    svg.click(() => btn.click())\r\n    btn.replaceWith(svg.node)\r\n\r\n\r\n    return (\r\n        <Styles>\r\n            {/* <Button className=\"Button\" block size=\"lg\" href=\"#\">Book your visit now! </Button> */}\r\n           \r\n        </Styles>\r\n    );\r\n}\r\n\r\nexport default BookButton;"]},"metadata":{},"sourceType":"module"}