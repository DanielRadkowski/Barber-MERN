{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\BookForm.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Button, Form } from 'react-bootstrap';\nconst Styles = styled.div`\n\n`;\nexport default function BookForm(props) {\n  const [contact, setContact] = useState({\n    customerName: \"\",\n    customerPhone: \"\",\n    hourKey: props.key\n  });\n\n  let handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setContact(prevValue => {\n      if (name === \"customerName\") {\n        return {\n          customerName: value,\n          customerPhone: prevValue.customerPhone,\n          hourKey: prevValue.hourKey\n        };\n      } else {\n        return {\n          customerName: prevValue.customerName,\n          customerPhone: value,\n          hourKey: prevValue.hourKey\n        };\n      }\n    });\n  }; // let handleCustomer = customer => {\n  //     dailyBookedHours[customer] = contact;\n  //{console.log(dailyBookedHours)}\n  //}\n\n\n  let onSubmit = e => {\n    e.prevetDefault();\n    const contactData = {\n      name: contact.customerName,\n      phone: contact.customerPhone,\n      key: contact.hourKey\n    };\n    console.log(contactData);\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Your name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"customerName\",\n    placeholder: \"Name\",\n    onChange: handleChange,\n    value: contact.customerName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Your phone number\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"customerPhone\",\n    placeholder: \"Enter phone\",\n    onChange: handleChange,\n    value: contact.customerPhone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\" //onClick={handleCustomer(props.key)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Book visit!\")));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/BookForm.jsx"],"names":["React","useState","styled","axios","dateFns","breakpoints","Button","Form","Styles","div","BookForm","props","contact","setContact","customerName","customerPhone","hourKey","key","handleChange","event","value","name","target","prevValue","onSubmit","e","prevetDefault","contactData","phone","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function BookForm(props) {\r\n\r\n    const [contact, setContact] = useState({\r\n        customerName: \"\",\r\n        customerPhone: \"\",\r\n        hourKey: props.key\r\n    });\r\n\r\n    let handleChange = event => {\r\n        const { value, name } = event.target;\r\n\r\n        setContact (prevValue => {\r\n            if (name === \"customerName\") {\r\n                return {\r\n                    customerName: value,\r\n                    customerPhone: prevValue.customerPhone,\r\n                    hourKey: prevValue.hourKey\r\n                }\r\n            } else {\r\n                return {\r\n                    customerName: prevValue.customerName,\r\n                    customerPhone: value,\r\n                    hourKey: prevValue.hourKey\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n   \r\n\r\n    // let handleCustomer = customer => {\r\n    //     dailyBookedHours[customer] = contact;\r\n        //{console.log(dailyBookedHours)}\r\n    //}\r\n\r\n    let onSubmit = e => {\r\n        e.prevetDefault();\r\n\r\n        const contactData = {\r\n            name: contact.customerName,\r\n            phone: contact.customerPhone,\r\n            key: contact.hourKey\r\n        }\r\n\r\n        console.log(contactData);\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>Your name</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        name=\"customerName\" \r\n                        placeholder=\"Name\" \r\n                        onChange={handleChange}\r\n                        value={contact.customerName}                        \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPhone\">\r\n                    <Form.Label>Your phone number</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\" \r\n                        name=\"customerPhone\" \r\n                        placeholder=\"Enter phone\"\r\n                        onChange={handleChange} \r\n                        value={contact.customerPhone} \r\n                    />  \r\n                </Form.Group>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    type=\"submit\"\r\n                    //onClick={handleCustomer(props.key)}\r\n                >\r\n                    Book visit!\r\n                    \r\n                </Button>\r\n            </Form>\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}