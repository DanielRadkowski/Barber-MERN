{"ast":null,"code":"import _styled from\"styled-components\";import React from'react';import*as dateFns from'date-fns';import{breakpoints}from'styled-bootstrap-responsive-breakpoints';import{Container,Row,Col}from'react-bootstrap';import circle from'../../pictures/red-circle.png';var Styles=_styled.div.withConfig({displayName:\"CalendarCells__Styles\",componentId:\"ejgu5m-0\"})([\"@media (min-width:\",\"){.cell{font-family:'Anton',sans-serif;font-size:1.25em;}.cell--unavailable{color:#e0e2eb !important;}.cell--sunday{color:#cc0000;}.cell--choosen{background:url(\",\");background-size:2.5em;background-repeat:no-repeat;background-position:center;padding:10px 0;margin:-10px 0;border-style:none;}.cell--available{&:hover{cursor:pointer;background:url(\",\");background-size:2.5em;background-repeat:no-repeat;background-position:center;padding:10px 0;margin:-10px 0;border-style:none;}}.off-pointer-events{pointer-events:none;}}@media (min-width:\",\"){.cell{font-size:1.5em;}.cell--choosen{background-size:3.5em;padding:15px 0;margin:-15px 0;}.cell--available{&:hover{background-size:3.5em;padding:15px 0;margin:-15px 0;}}}@media (min-width:\",\"){.cell--choosen{background-size:4em;padding:20px 0;margin:-20px 0;}.cell--available{&:hover{background-size:4em;padding:20px 0;margin:-20px 0;}}}\"],breakpoints.xs,circle,circle,breakpoints.sm,breakpoints.lg);export default function CalendarCells(props){var _props$state=props.state,currentMonth=_props$state.currentMonth,selectedDate=_props$state.selectedDate,currentDate=_props$state.currentDate;var monthStart=dateFns.startOfMonth(currentMonth);var monthEnd=dateFns.endOfMonth(monthStart);var startDate=dateFns.startOfWeek(monthStart,{weekStartsOn:1});var endDate=dateFns.endOfWeek(monthEnd,{weekStartsOn:1});var rows=[];var days=[];var day=startDate;var formattedDate=\"\";for(day;day<=endDate;day++){var _loop=function _loop(i){formattedDate=dateFns.format(day,\"d\");var cloneDay=day;days.push(React.createElement(Col,{className:\"\\n                        \".concat(!dateFns.isSunday(day)&(dateFns.isSameDay(day,currentDate)|dateFns.isAfter(day,currentDate))?\"cell--available\":dateFns.isSunday(day)?\"cell--sunday off-pointer-events\":\"cell--unavailable\",\"\\n                        \").concat(dateFns.isSameDay(day,selectedDate)?\"cell--choosen\":dateFns.isSameMonth(day,monthStart)?\"\":\"text-muted off-pointer-events\",\" \\n                        px-0\\n                        \"),key:day,onClick:function onClick(){return props.onDateClick(cloneDay);}},React.createElement(\"span\",{className:\"cell\"},formattedDate)));day=dateFns.addDays(day,1);};for(var i=0;i<7;i++){_loop(i);}rows.push(React.createElement(Row,{className:\"text-center\",key:day},days));days=[];}return React.createElement(Styles,null,React.createElement(Container,null,rows));}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/CalendarCells.jsx"],"names":["React","dateFns","breakpoints","Container","Row","Col","circle","Styles","styled","div","xs","sm","lg","CalendarCells","props","state","currentMonth","selectedDate","currentDate","monthStart","startOfMonth","monthEnd","endOfMonth","startDate","startOfWeek","weekStartsOn","endDate","endOfWeek","rows","days","day","formattedDate","i","format","cloneDay","push","isSunday","isSameDay","isAfter","isSameMonth","onDateClick","addDays"],"mappings":"uCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,UAAzB,CACA,OAASC,WAAT,KAA4B,yCAA5B,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,CAGA,GAAMC,CAAAA,MAAM,CAAGC,OAAM,CAACC,GAAV,s9BAESP,WAAW,CAACQ,EAFrB,CAkBcJ,MAlBd,CA8BkBA,MA9BlB,CA4CSJ,WAAW,CAACS,EA5CrB,CA+DST,WAAW,CAACU,EA/DrB,CAAZ,CAgFA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,kBAEWA,KAAK,CAACC,KAFjB,CAEjCC,YAFiC,cAEjCA,YAFiC,CAEnBC,YAFmB,cAEnBA,YAFmB,CAELC,WAFK,cAELA,WAFK,CAGzC,GAAMC,CAAAA,UAAU,CAAGlB,OAAO,CAACmB,YAAR,CAAqBJ,YAArB,CAAnB,CACA,GAAMK,CAAAA,QAAQ,CAAGpB,OAAO,CAACqB,UAAR,CAAmBH,UAAnB,CAAjB,CACA,GAAMI,CAAAA,SAAS,CAAGtB,OAAO,CAACuB,WAAR,CAAoBL,UAApB,CAAgC,CAAEM,YAAY,CAAE,CAAhB,CAAhC,CAAlB,CACA,GAAMC,CAAAA,OAAO,CAAGzB,OAAO,CAAC0B,SAAR,CAAkBN,QAAlB,CAA4B,CAAEI,YAAY,CAAE,CAAhB,CAA5B,CAAhB,CAEA,GAAMG,CAAAA,IAAI,CAAG,EAAb,CAEA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,GAAG,CAAGP,SAAV,CACA,GAAIQ,CAAAA,aAAa,CAAG,EAApB,CAGA,IAAKD,GAAL,CAAUA,GAAG,EAAIJ,OAAjB,CAA0BI,GAAG,EAA7B,CAAiC,0BACpBE,CADoB,EAEzBD,aAAa,CAAG9B,OAAO,CAACgC,MAAR,CAAeH,GAAf,CAAoB,GAApB,CAAhB,CACA,GAAMI,CAAAA,QAAQ,CAAGJ,GAAjB,CACAD,IAAI,CAACM,IAAL,CACI,oBAAC,GAAD,EACI,SAAS,qCACH,CAAElC,OAAO,CAACmC,QAAR,CAAiBN,GAAjB,CAAF,EAA4B7B,OAAO,CAACoC,SAAR,CAAkBP,GAAlB,CAAuBZ,WAAvB,EAAsCjB,OAAO,CAACqC,OAAR,CAAgBR,GAAhB,CAAqBZ,WAArB,CAAlE,EACA,iBADA,CACoBjB,OAAO,CAACmC,QAAR,CAAiBN,GAAjB,EAAwB,iCAAxB,CAA4D,mBAF7E,sCAGH7B,OAAO,CAACoC,SAAR,CAAkBP,GAAlB,CAAuBb,YAAvB,EACA,eADA,CACkBhB,OAAO,CAACsC,WAAR,CAAoBT,GAApB,CAAyBX,UAAzB,EAAuC,EAAvC,CAA4C,+BAJ3D,6DADb,CASI,GAAG,CAAEW,GATT,CAUI,OAAO,CAAE,yBAAMhB,CAAAA,KAAK,CAAC0B,WAAN,CAAkBN,QAAlB,CAAN,EAVb,EAYI,4BAAM,SAAS,CAAC,MAAhB,EAAwBH,aAAxB,CAZJ,CADJ,EAgBAD,GAAG,CAAG7B,OAAO,CAACwC,OAAR,CAAgBX,GAAhB,CAAqB,CAArB,CAAN,CApByB,EAC7B,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,OAAnBA,CAAmB,EAoB3B,CACDJ,IAAI,CAACO,IAAL,CACI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEL,GAAlC,EACKD,IADL,CADJ,EAKAA,IAAI,CAAG,EAAP,CACH,CAED,MACI,qBAAC,MAAD,MACI,oBAAC,SAAD,MAAYD,IAAZ,CADJ,CADJ,CAKH","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport circle from '../../pictures/red-circle.png';\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n@media (min-width: ${breakpoints.xs}) {\r\n\r\n    .cell {\r\n        font-family: 'Anton', sans-serif;\r\n        font-size: 1.25em;\r\n    }\r\n\r\n    .cell--unavailable {\r\n        color: #e0e2eb !important;\r\n    }\r\n\r\n    .cell--sunday {\r\n        color: #cc0000;\r\n    }\r\n\r\n    .cell--choosen {\r\n        background: url(${circle});\r\n        background-size: 2.5em;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        padding: 10px 0;\r\n        margin: -10px 0;\r\n        border-style: none;\r\n    }\r\n    \r\n    .cell--available {\r\n        &:hover {\r\n            cursor: pointer;\r\n            background: url(${circle});\r\n            background-size: 2.5em;\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n            padding: 10px 0;\r\n            margin: -10px 0;\r\n            border-style: none;\r\n        }\r\n    }\r\n\r\n    .off-pointer-events {\r\n        pointer-events : none;\r\n    }\r\n}\r\n@media (min-width: ${breakpoints.sm}) {\r\n\r\n    .cell {\r\n        font-size: 1.5em;\r\n    }\r\n    .cell--choosen { \r\n        background-size: 3.5em;      \r\n        padding: 15px 0;\r\n        margin: -15px 0;     \r\n    }\r\n    .cell--available {\r\n        &:hover {\r\n            background-size: 3.5em;\r\n            padding: 15px 0;\r\n            margin: -15px 0;            \r\n        }\r\n    }   \r\n}\r\n\r\n@media (min-width: ${breakpoints.lg}) {\r\n\r\n    .cell--choosen { \r\n        background-size: 4em;      \r\n        padding: 20px 0;\r\n        margin: -20px 0;     \r\n    }\r\n    .cell--available {\r\n        &:hover {\r\n            background-size: 4em;\r\n            padding: 20px 0;\r\n            margin: -20px 0;             \r\n        }\r\n    }\r\n}    \r\n`\r\n\r\nexport default function CalendarCells(props) {\r\n\r\n    const { currentMonth, selectedDate, currentDate } = props.state;\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    const startDate = dateFns.startOfWeek(monthStart, { weekStartsOn: 1 });\r\n    const endDate = dateFns.endOfWeek(monthEnd, { weekStartsOn: 1 });\r\n\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n\r\n\r\n    for (day; day <= endDate; day++) {\r\n        for (let i = 0; i < 7; i++) {\r\n            formattedDate = dateFns.format(day, \"d\");\r\n            const cloneDay = day;\r\n            days.push(\r\n                <Col\r\n                    className={`\r\n                        ${!(dateFns.isSunday(day)) & (dateFns.isSameDay(day, currentDate) | dateFns.isAfter(day, currentDate))\r\n                        ? \"cell--available\" : dateFns.isSunday(day) ? \"cell--sunday off-pointer-events\" : \"cell--unavailable\"}\r\n                        ${dateFns.isSameDay(day, selectedDate)\r\n                        ? \"cell--choosen\" : dateFns.isSameMonth(day, monthStart) ? \"\" : \"text-muted off-pointer-events\"} \r\n                        px-0\r\n                        `}\r\n\r\n                    key={day}\r\n                    onClick={() => props.onDateClick(cloneDay)}\r\n                >\r\n                    <span className=\"cell\">{formattedDate}</span>\r\n                </Col>\r\n            );\r\n            day = dateFns.addDays(day, 1);\r\n        }\r\n        rows.push(\r\n            <Row className=\"text-center\" key={day}>\r\n                {days}\r\n            </Row>\r\n        );\r\n        days = [];\r\n    }\r\n\r\n    return (\r\n        <Styles>\r\n            <Container>{rows}</Container>\r\n        </Styles>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}