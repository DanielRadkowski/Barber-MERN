{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\nimport BookForm from './BookForm';\nconst Styles = styled.div`\n\n \n@media (min-width: ${breakpoints.xs}) {\n\n    .hours-table {\n        height: 100%;\n    }\n\n    .height-of-column {\n        height: 15.5em;\n    }\n}\n\n@media (min-width: ${breakpoints.lg}) {\n\n    .height-of-column {\n        left: 12.5em;\n    }\n\n    .move-table-left {\n        left: 0;\n    }\n}\n`;\nexport default function Hours(props) {\n  let Ranges = (openingHour, openingMinutes, numberOfHours) => {\n    let arr = [];\n    let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\n    let endHour = 0;\n\n    for (let i = 0; i <= numberOfHours * 2 - 1; i++) {\n      endHour = dateFns.addMinutes(startHour, 30);\n      arr.push(dateFns.format(startHour, \"H.mm\") + \" - \" + dateFns.format(endHour, \"H.mm\"));\n      startHour = endHour;\n    }\n\n    return arr;\n  };\n\n  let mongoHours = (openingHour, openingMinutes, numberOfHours) => {\n    let arr = [];\n    let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\n\n    for (let i = 0; i < numberOfHours * 2; i++) {\n      arr.push(dateFns.format(startHour, \"H-mm\"));\n      startHour = dateFns.addMinutes(startHour, 30);\n    }\n\n    return arr;\n  };\n\n  const hoursRanges = Ranges(9, 0, 8.5);\n  const mongoHoursArray = mongoHours(9, 0, 8.5);\n  const selectedDate = props.state.selectedDate;\n  const clients = props.state.clients;\n  const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\n  const day = clients.filter(client => {\n    return client.date === formattedDate;\n  });\n\n  let hoursTable = () => {\n    let availabeHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          action: true,\n          variant: \"success\",\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: formattedDate,\n          day: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }))\n      });\n    };\n\n    let disableHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          disabled: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, hoursRanges[i])\n      });\n    };\n\n    let hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      if (day.length > 0) {\n        if (day[0].hours[mongoHoursArray[i]].name === null) {\n          availabeHour(i);\n        } else {\n          disableHour(i);\n        }\n      } else {\n        availabeHour(i);\n      }\n    }\n\n    return hoursList;\n  };\n\n  let handleListClick = () => {\n    var element = document.getElementById(\"listCol\");\n    element.classList.toggle(\"move-table-left\");\n  };\n\n  return React.createElement(Styles, {\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: 6,\n    id: \"listCol\",\n    className: \"height-of-column positon-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Choose hour:\"), React.createElement(ListGroup, {\n    className: \"hours-table overflow-auto\",\n    onClick: handleListClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    lg: 6,\n    className: \"mt-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Leave contact:\"), hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","BookForm","Styles","div","xs","lg","Hours","props","Ranges","openingHour","openingMinutes","numberOfHours","arr","startHour","setMinutes","setHours","Date","endHour","i","addMinutes","push","format","mongoHours","hoursRanges","mongoHoursArray","selectedDate","state","clients","formattedDate","day","filter","client","date","hoursTable","availabeHour","hoursList","hour","toString","form","disableHour","length","hours","name","handleListClick","element","document","getElementById","classList","toggle","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport BookForm from './BookForm';\r\n\r\nconst Styles = styled.div`\r\n\r\n \r\n@media (min-width: ${breakpoints.xs}) {\r\n\r\n    .hours-table {\r\n        height: 100%;\r\n    }\r\n\r\n    .height-of-column {\r\n        height: 15.5em;\r\n    }\r\n}\r\n\r\n@media (min-width: ${breakpoints.lg}) {\r\n\r\n    .height-of-column {\r\n        left: 12.5em;\r\n    }\r\n\r\n    .move-table-left {\r\n        left: 0;\r\n    }\r\n}\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    let Ranges = (openingHour, openingMinutes, numberOfHours) => {\r\n        let arr = [];\r\n        let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\r\n        let endHour = 0;\r\n        for (let i = 0; i <= (numberOfHours * 2) - 1; i++) {\r\n            endHour = dateFns.addMinutes(startHour, 30);\r\n            arr.push(dateFns.format(startHour, \"H.mm\") + \" - \" + dateFns.format(endHour, \"H.mm\"));\r\n            startHour = endHour;\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    let mongoHours = (openingHour, openingMinutes, numberOfHours) => {\r\n        let arr = [];\r\n        let startHour = dateFns.setMinutes(dateFns.setHours(new Date(), openingHour), openingMinutes);\r\n        for (let i = 0; i < (numberOfHours * 2); i++) {\r\n            arr.push(dateFns.format(startHour, \"H-mm\"));\r\n            startHour = dateFns.addMinutes(startHour, 30);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    const hoursRanges = Ranges(9, 0, 8.5);\r\n    const mongoHoursArray = mongoHours(9, 0, 8.5);\r\n\r\n    const selectedDate = props.state.selectedDate;\r\n    const clients = props.state.clients;\r\n    const formattedDate = dateFns.format(selectedDate, \"dd-MM-y\");\r\n    const day = clients.filter(client => {\r\n        return client.date === formattedDate;\r\n    });\r\n\r\n    let hoursTable = () => {\r\n\r\n        let availabeHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        action\r\n                        variant=\"success\"\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                ),\r\n\r\n                form: (\r\n                    <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                        <BookForm\r\n                            id={i}\r\n                            date={formattedDate}\r\n                            day={day}\r\n                        />\r\n                    </Tab.Pane>\r\n                )\r\n            });\r\n        }\r\n\r\n        let disableHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        disabled\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                )\r\n            });\r\n        }\r\n\r\n        let hoursList = [];\r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n            if (day.length > 0) {\r\n                if (day[0].hours[mongoHoursArray[i]].name === null) {\r\n                    availabeHour(i);\r\n                } else {\r\n                    disableHour(i);\r\n                }\r\n            } else {\r\n                availabeHour(i);\r\n            }\r\n        }\r\n        return hoursList;\r\n    }\r\n\r\n    let handleListClick = () => {\r\n        var element = document.getElementById(\"listCol\");\r\n        element.classList.toggle(\"move-table-left\");\r\n    }\r\n\r\n    return (\r\n        <Styles className=\"my-3\">\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row className=\"justify-content-center\">\r\n                    <Col lg={6} id=\"listCol\" className=\"height-of-column positon-relative\">\r\n                        <h3>Choose hour:</h3>\r\n                        <ListGroup\r\n                            className=\"hours-table overflow-auto\"\r\n                            onClick={handleListClick}\r\n                        >\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col lg={6} className=\"mt-md-3\">\r\n                        <Tab.Content>\r\n                            <h3 className=\"\">Leave contact:</h3>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}