{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\nimport BookForm from './BookForm';\nconst Styles = styled.div`\n\n`;\nexport default function Hours(props) {\n  const [state, setState] = useState({\n    selectedDate: props.selectedDate,\n    clients: props.clients\n  });\n  useEffect(() => {\n    setState({\n      selectedDate: state.selectedDate,\n      clients: state.clients\n    });\n  }, []);\n  const hoursArray = [\"9-00\", \"9-30\", \"10-00\", \"10-30\", \"11-00\", \"11-30\", \"12-00\", \"12-30\", \"13-00\", \"13-30\", \"14-00\", \"14-30\", \"15-00\", \"15-30\", \"16-00\", \"16-30\", \"17-00\"];\n  const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\", \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\", \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"]; // let hoursRanges = () => {\n  //     let arr = [];\n  //     for (let i = 9; i < 18; i++) {\n  //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \n  //     }\n  // }\n  //hoursSchemaProps();\n  // let loadedDay = () => {\n  //     setState({\n  //         selectedDate: state.selectedDate,\n  //         clients: state.clients\n  //     });\n  //     console.log(state.selectedDate);\n  //     const formattedDate = dateFns.format(state.selectedDate, \"dd-MM-y\");\n  //     const day = state.clients.filter(client => {\n  //         return client.date === formattedDate;\n  //     });\n  //     return (day, formattedDate);\n  // }\n\n  const formattedDate = dateFns.format(state.selectedDate, \"dd-MM-y\");\n  const day = state.clients.filter(client => {\n    return client.date === formattedDate;\n  }); //console.log(loadedDay().day);\n\n  let hoursTable = () => {\n    let availabeHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          action: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: day,\n          day: formattedDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }))\n      });\n    };\n\n    let disableHour = i => {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          id: i,\n          disabled: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, hoursRanges[i])\n      });\n    };\n\n    let hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      if (day.length > 0) {\n        if (loadedDay()[0].hours[hoursArray[i]] === undefined) {\n          availabeHour(i);\n        } else {\n          disableHour(i);\n        }\n      } else {\n        availabeHour(i);\n      }\n    }\n\n    return hoursList;\n  };\n\n  return React.createElement(Styles, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","useState","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","Form","BookForm","Styles","div","Hours","props","state","setState","selectedDate","clients","useEffect","hoursArray","hoursRanges","formattedDate","format","day","filter","client","date","hoursTable","availabeHour","i","hoursList","push","hour","toString","form","disableHour","length","loadedDay","hours","undefined","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\r\nimport BookForm from './BookForm'\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    const [state, setState] = useState({\r\n        selectedDate: props.selectedDate,\r\n        clients: props.clients\r\n    });\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            selectedDate: state.selectedDate,\r\n            clients: state.clients\r\n        })\r\n    },[]);\r\n\r\n    const hoursArray = [\"9-00\", \"9-30\", \"10-00\", \"10-30\", \"11-00\",\r\n        \"11-30\", \"12-00\", \"12-30\", \"13-00\", \"13-30\", \"14-00\",\r\n        \"14-30\", \"15-00\", \"15-30\", \"16-00\", \"16-30\", \"17-00\"];\r\n\r\n    const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\",\r\n        \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\",\r\n        \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"];\r\n\r\n    // let hoursRanges = () => {\r\n    //     let arr = [];\r\n    //     for (let i = 9; i < 18; i++) {\r\n    //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \r\n    //     }\r\n    // }\r\n\r\n    //hoursSchemaProps();\r\n\r\n    // let loadedDay = () => {\r\n\r\n    //     setState({\r\n    //         selectedDate: state.selectedDate,\r\n    //         clients: state.clients\r\n    //     });\r\n        \r\n    //     console.log(state.selectedDate);\r\n\r\n    //     const formattedDate = dateFns.format(state.selectedDate, \"dd-MM-y\");\r\n\r\n    //     const day = state.clients.filter(client => {\r\n    //         return client.date === formattedDate;\r\n    //     });\r\n\r\n    //     return (day, formattedDate);\r\n    // }\r\n\r\n        const formattedDate = dateFns.format(state.selectedDate, \"dd-MM-y\");\r\n\r\n        const day = state.clients.filter(client => {\r\n            return client.date === formattedDate;\r\n        });\r\n    //console.log(loadedDay().day);\r\n\r\n    let hoursTable = () => {\r\n\r\n        let availabeHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        action\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                ),\r\n\r\n                form: (\r\n                    <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                        <BookForm\r\n                            id={i}\r\n                            date={day}\r\n                            day={formattedDate}\r\n                        />\r\n                    </Tab.Pane>\r\n                )\r\n            });\r\n        }\r\n\r\n        let disableHour = i => {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        id={i}\r\n                        disabled\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                )\r\n            });\r\n        }\r\n\r\n        let hoursList = [];\r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n            if (day.length > 0) {\r\n                if (loadedDay()[0].hours[hoursArray[i]] === undefined) {\r\n                    availabeHour(i);\r\n                } else {\r\n                    disableHour(i);\r\n                }\r\n            } else {\r\n                availabeHour(i);\r\n            }\r\n        }\r\n        return hoursList;\r\n    }\r\n\r\n    return (\r\n        <Styles className=\"\" >\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <ListGroup>\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}