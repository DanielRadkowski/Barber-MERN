{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookButton.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport BookWindow from './BookWindow/BookWindow';\nconst Styles = styled.div`\n\n\n.btn {\n    text-shadow: 0.06em 0.06em #000;\n    &:hover {\n        background-color: rgba(255, 255, 255, 0.3);\n        color: white;\n    }\n  }\n\n  @media (min-width: ${breakpoints.xs}){\n\n    .btn {\n      width: 12em;\n      margin: 2vw 0 0 0;\n      font-size: 1.2em;  \n    }\n  }\n\n  @media(min-width: ${breakpoints.md}) {\n\n    .btn {\n      width: 13em;\n      font-size: 5vw;\n    }\n  }\n\n  @media(min-width: ${breakpoints.lg}) {\n    .btn {\n      width: 40vw;\n      font-size: 3.5vw;\n    }\n  }\n\n  @media(min-width: ${breakpoints.xl}) {\n    .btn {\n      width: 25vw;\n    }\n  }\n\n`;\nexport default function BookButton(props) {\n  const [modalShow, setModalShow] = useState(false);\n  return React.createElement(Styles, {\n    className: \"text-white w-100 mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outline-light\",\n    className: \"Button mx-auto\",\n    block: true,\n    size: \"lg\",\n    onClick: () => setModalShow(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.name), React.createElement(BookWindow, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookButton.jsx"],"names":["React","useState","styled","Button","breakpoints","BookWindow","Styles","div","xs","md","lg","xl","BookButton","props","modalShow","setModalShow","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;uBAWHH,WAAW,CAACI,EAAG;;;;;;;;;sBAShBJ,WAAW,CAACK,EAAG;;;;;;;;sBAQfL,WAAW,CAACM,EAAG;;;;;;;sBAOfN,WAAW,CAACO,EAAG;;;;;;CAnCrC;AA2CA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAExC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEE,SACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,eADV;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,IAJP;AAKE,IAAA,OAAO,EAAE,MAAMc,YAAY,CAAC,IAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKF,KAAK,CAACG,IAPX,CADJ,EAWK,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,SAAlB;AAA6B,IAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXL,CADJ;AAeH","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'react-bootstrap';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport BookWindow from './BookWindow/BookWindow';\r\n\r\nconst Styles = styled.div`\r\n\r\n\r\n.btn {\r\n    text-shadow: 0.06em 0.06em #000;\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.3);\r\n        color: white;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.xs}){\r\n\r\n    .btn {\r\n      width: 12em;\r\n      margin: 2vw 0 0 0;\r\n      font-size: 1.2em;  \r\n    }\r\n  }\r\n\r\n  @media(min-width: ${breakpoints.md}) {\r\n\r\n    .btn {\r\n      width: 13em;\r\n      font-size: 5vw;\r\n    }\r\n  }\r\n\r\n  @media(min-width: ${breakpoints.lg}) {\r\n    .btn {\r\n      width: 40vw;\r\n      font-size: 3.5vw;\r\n    }\r\n  }\r\n\r\n  @media(min-width: ${breakpoints.xl}) {\r\n    .btn {\r\n      width: 25vw;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport default function BookButton(props) {\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <Styles className=\"text-white w-100 mx-auto\">\r\n            <Button \r\n              variant=\"outline-light\" \r\n              className=\"Button mx-auto\" \r\n              block \r\n              size=\"lg\" \r\n              onClick={() => setModalShow(true)}\r\n            >\r\n                {props.name}\r\n             </Button> \r\n\r\n             <BookWindow show={modalShow} onHide={() => setModalShow(false)} />\r\n        </Styles>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}