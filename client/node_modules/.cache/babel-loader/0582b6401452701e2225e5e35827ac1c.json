{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\Layout\\\\Navigation\\\\Navigation.jsx\";\nimport React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\n\nconst Styles = _styled.nav.withConfig({\n  displayName: \"Navigation__Styles\",\n  componentId: \"sc-653zuk-0\"\n})([\".navbar{background-color:#000;}.navbar-nav{margin:0 2em;}@media(min-width:\", \"){h1{font-size:1.5em;}.nav-link{font-size:1.5em;}}@media(min-width:\", \"){h1{display:inline;font-size:2em;}.nav-link{font-size:1.5em;margin:0 0.25em;}}\"], breakpoints.xs, breakpoints.lg);\n\nexport default function Navigation() {\n  const [id, setId] = useState(\"\");\n\n  let offset = elmnt => {\n    window.scrollTo({\n      top: elmnt.offsetTop - 50,\n      behavior: \"smooth\"\n    });\n  };\n\n  let scrollHome = () => {\n    let elmnt = document.getElementById(\"home\");\n    offset(elmnt);\n    setId(\"home\");\n  };\n\n  let scrollServices = () => {\n    let elmnt = document.getElementById(\"services\");\n    offset(elmnt);\n    setId(\"services\");\n  };\n\n  let scrollContact = () => {\n    let elmnt = document.getElementById(\"contact\");\n    offset(elmnt);\n    setId(\"contact\");\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    id: \"navbar\",\n    collapseOnSelect: true,\n    variant: \"dark\",\n    expand: \"md\",\n    fixed: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#\",\n    onClick: scrollHome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Barber Andrew\")), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"responsive-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"responsive-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    href: \"#\",\n    onClick: scrollHome,\n    className: `${id === \"home\" ? \"text-light\" : \"text-muted\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Home\"), React.createElement(Nav.Link, {\n    href: \"#\",\n    onClick: scrollServices,\n    className: `${id === \"services\" ? \"text-light\" : \"text-muted\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Sevices\"), React.createElement(Nav.Link, {\n    href: \"#\",\n    onClick: scrollContact,\n    className: `${id === \"contact\" ? \"text-light\" : \"text-muted\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Contact\")))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/Layout/Navigation/Navigation.jsx"],"names":["React","useState","Navbar","Nav","breakpoints","Styles","styled","nav","xs","lg","Navigation","id","setId","offset","elmnt","window","scrollTo","top","offsetTop","behavior","scrollHome","document","getElementById","scrollServices","scrollContact"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,yCAA5B;;AAIA,MAAMC,MAAM,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,6OAWUH,WAAW,CAACI,EAXtB,EAoBUJ,WAAW,CAACK,EApBtB,CAAZ;;AAgCA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,EAAD,CAA5B;;AAEA,MAAIY,MAAM,GAAGC,KAAK,IAAI;AACpBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAEH,KAAK,CAACI,SAAN,GAAkB,EADT;AAEdC,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAID,GALD;;AAOA,MAAIC,UAAU,GAAG,MAAM;AACrB,QAAIN,KAAK,GAAGO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ;AACAT,IAAAA,MAAM,CAACC,KAAD,CAAN;AACAF,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD,GAJD;;AAMA,MAAIW,cAAc,GAAG,MAAM;AACzB,QAAIT,KAAK,GAAGO,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAZ;AACAT,IAAAA,MAAM,CAACC,KAAD,CAAN;AACAF,IAAAA,KAAK,CAAC,UAAD,CAAL;AACD,GAJD;;AAMA,MAAIY,aAAa,GAAG,MAAM;AACxB,QAAIV,KAAK,GAAGO,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAZ;AACAT,IAAAA,MAAM,CAACC,KAAD,CAAN;AACAF,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD,GAJD;;AAMA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,gBAAgB,MAApC;AAAqC,IAAA,OAAO,EAAC,MAA7C;AAAoD,IAAA,MAAM,EAAC,IAA3D;AAAgE,IAAA,KAAK,EAAC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,OAAO,EAAEQ,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE,oBAAC,MAAD,CAAQ,MAAR;AAAe,qBAAc,uBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,EAAE,EAAC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,OAAO,EAAEA,UAA5B;AAAwC,IAAA,SAAS,EAAG,GAAET,EAAE,KAAK,MAAP,GAAgB,YAAhB,GAA+B,YAAa,EAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,OAAO,EAAEY,cAA5B;AAA4C,IAAA,SAAS,EAAG,GAAEZ,EAAE,KAAK,UAAP,GAAoB,YAApB,GAAmC,YAAa,EAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,OAAO,EAAEa,aAA5B;AAA2C,IAAA,SAAS,EAAG,GAAEb,EAAE,KAAK,SAAP,GAAmB,YAAnB,GAAkC,YAAa,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CALF,CADF,CADF;AAiBD","sourcesContent":["import React, { useState } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport styled from 'styled-components/macro';\r\n\r\n\r\nconst Styles = styled.nav`\r\n\r\n\r\n  .navbar {\r\n    background-color: #000;\r\n  }\r\n\r\n  .navbar-nav {\r\n    margin: 0 2em;\r\n  }\r\n\r\n  @media(min-width: ${breakpoints.xs}) {\r\n    h1 {\r\n      font-size: 1.5em;\r\n    }\r\n    .nav-link {\r\n      font-size: 1.5em;\r\n    }\r\n  }\r\n\r\n  @media(min-width: ${breakpoints.lg}) {\r\n    h1 {\r\n      display: inline;\r\n      font-size: 2em;\r\n    }\r\n    .nav-link {\r\n      font-size: 1.5em;\r\n      margin: 0 0.25em;\r\n    }\r\n}\r\n`\r\n\r\nexport default function Navigation() {\r\n\r\n  const [id, setId] = useState(\"\");\r\n\r\n  let offset = elmnt => {\r\n    window.scrollTo({\r\n      top: elmnt.offsetTop - 50,\r\n      behavior: \"smooth\"\r\n    })\r\n  }\r\n\r\n  let scrollHome = () => {\r\n    let elmnt = document.getElementById(\"home\");\r\n    offset(elmnt);\r\n    setId(\"home\");\r\n  }\r\n  \r\n  let scrollServices = () => {\r\n    let elmnt = document.getElementById(\"services\");\r\n    offset(elmnt);\r\n    setId(\"services\");\r\n  }\r\n  \r\n  let scrollContact = () => {\r\n    let elmnt = document.getElementById(\"contact\");\r\n    offset(elmnt);\r\n    setId(\"contact\");\r\n  }\r\n\r\n  return (\r\n    <Styles>\r\n      <Navbar id=\"navbar\" collapseOnSelect variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n        <Navbar.Brand href=\"#\" onClick={scrollHome} >\r\n          <h1>Barber Andrew</h1>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#\" onClick={scrollHome} className={`${id === \"home\" ? \"text-light\" : \"text-muted\"}`}>Home</Nav.Link>\r\n            <Nav.Link href=\"#\" onClick={scrollServices} className={`${id === \"services\" ? \"text-light\" : \"text-muted\"}`}>Sevices</Nav.Link>\r\n            <Nav.Link href=\"#\" onClick={scrollContact} className={`${id === \"contact\" ? \"text-light\" : \"text-muted\"}`}>Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Styles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}