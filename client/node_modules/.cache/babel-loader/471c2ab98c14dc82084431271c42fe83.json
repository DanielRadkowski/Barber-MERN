{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Barber Andrew\\\\Barber 2.0\\\\barber-andrew\\\\client\\\\src\\\\components\\\\BookWindow\\\\Hours.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as dateFns from 'date-fns';\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\nimport BookForm from './BookForm';\nconst Styles = styled.div`\n\n`;\nexport default function Hours(props) {\n  const [, setState] = useState();\n\n  function handleUpdate() {\n    setState({});\n  } //const { currentMonth, selectedDate } = props.state;\n\n\n  const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\", \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\", \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"]; // let hoursRanges = () => {\n  //     let arr = [];\n  //     for (let i = 9; i < 18; i++) {\n  //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \n  //     }\n  // }\n  //     const formSchema = {\n  //         name: String,\n  //         phone: String\n  //     }\n  //    const hours = {};\n  //    for (const key of hoursRanges) {\n  //        hours[key] = formSchema;\n  //    }\n  //hoursSchemaProps();\n\n  let hoursTable = () => {\n    let hoursList = [];\n\n    for (let i = 0; i < hoursRanges.length; i++) {\n      hoursList.push({\n        hour: React.createElement(ListGroup.Item, {\n          key: i.toString(),\n          action: true,\n          href: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, hoursRanges[i]),\n        form: React.createElement(Tab.Pane, {\n          eventKey: \"#\" + i.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(BookForm, {\n          id: i,\n          date: props.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }))\n      });\n    }\n\n    return hoursList;\n  }; // this.forceUpdate = this.forceUpdate.bind(this);\n  // let handleUpdate = () => {\n  //     this.forceUpdate();\n  // }\n\n\n  return React.createElement(Styles, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Row, {\n    onClick: handleUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.hour;\n  }))), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Tab.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, hoursTable().map(item => {\n    return item.form;\n  }))))));\n}","map":{"version":3,"sources":["D:/Web Development/Barber Andrew/Barber 2.0/barber-andrew/client/src/components/BookWindow/Hours.jsx"],"names":["React","useState","styled","dateFns","breakpoints","Tab","Row","Col","ListGroup","Form","BookForm","Styles","div","Hours","props","setState","handleUpdate","hoursRanges","hoursTable","hoursList","i","length","push","hour","toString","form","date","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as dateFns from 'date-fns';\r\nimport { breakpoints } from 'styled-bootstrap-responsive-breakpoints';\r\nimport { Tab, Row, Col, ListGroup, Form } from 'react-bootstrap';\r\nimport BookForm from './BookForm'\r\n\r\n\r\nconst Styles = styled.div`\r\n\r\n`\r\n\r\nexport default function Hours(props) {\r\n\r\n    const  [,setState] = useState();\r\n    \r\n    function handleUpdate() {\r\n       setState({});  \r\n    }\r\n\r\n    \r\n    //const { currentMonth, selectedDate } = props.state;\r\n\r\n    const hoursRanges = [\"9.00 - 9.30\", \"9.30 - 10.00\", \"10.00 - 10.30\", \"10.30 - 11.00\", \"11.00 - 11.30\",\r\n        \"11.30 - 12.00\", \"12.00 - 12.30\", \"12.30 - 13.00\", \"13.00 - 13.30\", \"13.30 - 14.00\", \"14.00 - 14.30\",\r\n        \"14.30 - 15.00\", \"15.00 - 15.30\", \"15.30 - 16.00\", \"16.00 - 16.30\", \"16.30 - 17.00\", \"17.00 - 17.30\"];\r\n\r\n    // let hoursRanges = () => {\r\n    //     let arr = [];\r\n    //     for (let i = 9; i < 18; i++) {\r\n    //        arr.push(((9 + i/3).floor().toString()) + \".\" + (i * )) \r\n    //     }\r\n    // }\r\n//     const formSchema = {\r\n//         name: String,\r\n//         phone: String\r\n//     }\r\n    \r\n\r\n//    const hours = {};\r\n\r\n//    for (const key of hoursRanges) {\r\n//        hours[key] = formSchema;\r\n//    }\r\n\r\n\r\n     //hoursSchemaProps();\r\n\r\n    let hoursTable = () => {\r\n        let hoursList = [];\r\n        for (let i = 0; i < hoursRanges.length; i++) {\r\n            hoursList.push({\r\n                hour: (\r\n                    <ListGroup.Item\r\n                        key={i.toString()}\r\n                        action\r\n                        href={\"#\" + i.toString()}\r\n                    >\r\n                        {hoursRanges[i]}\r\n                    </ListGroup.Item>\r\n                ),\r\n\r\n                form: (\r\n                    <Tab.Pane eventKey={\"#\" + i.toString()}>\r\n                        <BookForm\r\n                            id={i}\r\n                            date={props.date}\r\n                        />\r\n                    </Tab.Pane>\r\n                )\r\n            });\r\n        }\r\n        return hoursList;\r\n    }\r\n\r\n    // this.forceUpdate = this.forceUpdate.bind(this);\r\n\r\n    // let handleUpdate = () => {\r\n    //     this.forceUpdate();\r\n    // }\r\n\r\n    return (\r\n        <Styles className=\"\" >\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n                <Row onClick={handleUpdate}>\r\n                    <Col sm={4}>\r\n                        <ListGroup>\r\n                            {hoursTable().map(item => { return item.hour })}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content>\r\n                            {hoursTable().map(item => { return item.form })}\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n            \r\n        </Styles>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}